{"version":3,"file":"eviltypes.tests.bundle.js","mappings":";;;;;;;;;;;;;;;AAAO;AACP,2BAA2B,eAAe;AAC1C,2BAA2B,QAAQ;AACnC,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA,+CAA+C,WAAW,uBAAuB,yCAAyC;AAC1H,MAAM;AACN;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACZ4B;;;;;;;;;;;;;;;;;;ACAS;;AAE9B;AACP,IAAI,kDAAM;AACV;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,QAAQ,kDAAM;AACd;AACA;AACA;AACA;AACA,QAAQ,kDAAM;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,kDAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,kDAAM;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;;AAEA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;;AAEO;AACP;;AAEA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;;;;;;;;;;;ACjGgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4CAAM;AACV;AACA;AACA;;;;;;;;;;;;ACNgB;;AAEhB,2BAA2B,uCAAK;AAChC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,WAAW,cAAc;AACzB;AACA;;AAEA,WAAW,cAAc;AACzB;AACA;;AAEA,WAAW,cAAc;AACzB;AACA;;AAEA,+BAA+B,uCAAK;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,uCAAK;AAChC;;AAEA;AACA;AACA;AACA;AACA;;AAEA,WAAW,cAAc;AACzB;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA,WAAW,cAAc;AACzB;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA,cAAc,wBAAwB;AACtC,mCAAmC,mBAAmB;AACtD,IAAI,4CAAM;;AAEV;AACA;AACA,+BAA+B,wCAAM;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;UCjFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNkC","sources":["webpack://eviltypes/./src/assert.js","webpack://eviltypes/./src/index.js","webpack://eviltypes/./src/types.js","webpack://eviltypes/./tests/assert-tests.js","webpack://eviltypes/./tests/types-tests.js","webpack://eviltypes/webpack/bootstrap","webpack://eviltypes/webpack/runtime/define property getters","webpack://eviltypes/webpack/runtime/hasOwnProperty shorthand","webpack://eviltypes/webpack/runtime/make namespace object","webpack://eviltypes/./tests/index.js"],"sourcesContent":["export function assert(\n                /** @type {() => boolean} */ testFn,\n                /** @type {string} */ textOnFail,\n                /** @type {Array|Object} */ values,\n) {\n    try {\n        const isTestPass = testFn();\n        if (!isTestPass)\n            throw Error(`Assert failure: NOT ${textOnFail}, with debug values: ${values ? JSON.stringify(values) : testFn}`);\n    } catch (err) {\n        console.error('[ASSERT FAILURE]', err);\n    }\n}\n","export * from './assert.js';\nexport * from './types.js';","import { assert } from './assert.js';\n\nexport function assertType(instance, type) {\n    assert(\n        () => instance.constructor.name === type.name,\n        \"the same type as expected [EvilTypes]\",\n        [instance, type]\n    );\n}\n\nexport class TBase {\n    static _PRIMITIVES = [\n        'number',\n        'string',\n        'object',\n        'function',\n    ];\n\n    /** \n     * @abstract\n     * @type {string}\n     * Underlying primitive data type\n     */\n    primitive;\n\n    _validate() {\n        assert(\n            () => TBase._PRIMITIVES.some(x => x === this.primitive),\n            \"a valid primitive type name  [EvilTypes]\",\n            [this.primitive]\n        );\n        assert(\n            () => (this._value !== undefined)\n                ? (typeof this._value === this.primitive)\n                : true,\n            \"a valid primitive type value [EvilTypes]\",\n            [this._value, this.primitive]\n        );\n\n        if (this.primitive === 'object') {\n            assert(\n                () =>\n                    (typeof this.types === 'object')\n                    && Object.keys(this.types).every(k => typeof k === 'string')\n                    && Object.values(this.types).every(v => typeof v === 'function'),\n                \"a valid typed object\",\n                [this.types, this.primitive]\n            );\n\n            for (const k in this.types) {\n                assertType(this._value[k], this.types[k]);\n            }\n        }\n\n        assert(\n            () => this.assert(this._value),\n            \"a valid value [EvilTypes]\",\n            [this._value],\n        );\n    }\n\n    /**\n     * @type {any} \n     */\n    _value;\n\n    /** @final */\n    set(/** @type {any} */ v) {\n        this._value = v;\n        this._validate();\n        return this;\n    }\n\n    /** \n     * @final\n     * @returns {any} reference to the stored primitive value\n     */\n    get() {\n        this._validate();\n        return this._value;\n    }\n\n    /**\n     * @abstract \n     * @returns {boolean}\n     */\n    assert(/** @type {any} */ value) {\n        return true;\n    }\n}\n\nexport class TError extends TBase {\n    primitive = 'string';\n\n    assert(/** @type {string} */ value) {\n        return !!value;\n    }\n}","import { assert } from '../src';\n\nfor (const value of [\n    '',\n    \"test\",\n    12,\n    'true',\n]) {\n    assert(\n        () => ['true', 'false'].some(x => x === value),\n        \"a proper string version of the boolean.\");\n}","import {\n    assert,\n    TBase,\n    TError,\n    assertType,\n} from '../src';\n\nclass TWholeNumber extends TBase {\n    primitive = 'number';\n\n    assert(value) {\n        return value >= 0;\n    }\n}\n\nconst x0 = new TWholeNumber();\nconsole.log(x0.get());\n\n/** @type {TWholeNumber} */\nconst x1 = new TWholeNumber().set('9');\nconsole.log(x1);\n\n/** @type {TWholeNumber} */\nconst x2 = new TWholeNumber().set(13);\nconsole.log(x2);\n\n/** @type {TWholeNumber} */\nconst x3 = new TWholeNumber().set(-4);\nconsole.log(x3);\n\nclass TUnformattedText extends TBase {\n    primitive = 'string';\n\n    assert(value) {\n        return !!value;\n    }\n}\n\n/** Radio component option value **/\nclass TRadioOption extends TBase {\n    primitive = 'object';\n\n    types = {\n        'value': TWholeNumber,\n        'label': TUnformattedText\n    };\n}\n\n/** @type {TRadioOption} */\nconst x4 = new TRadioOption().set({\n    value: new TWholeNumber().set(0),\n    label: new TUnformattedText().set(\"Option 0\"),\n});\nconsole.log(x4);\nconsole.log(x4.get().value);\nconsole.log(x4.get().value.get());\n\n/** @type {TRadioOption} */\nconst x5 = new TRadioOption().set({\n    value: new TWholeNumber().set(-1),\n    label: new TUnformattedText().set(\"[Please select]\"),\n});\nconsole.log(x5);\nconsole.log(x5.get().value);\nconsole.log(x5.get().value.get());\n\n/** @returns {[TWholeNumber, TError]} */\nfunction getOptionValue(/** @type {HTMLSelectElement} */ selectEl) {\n    assert(() => !isNaN(selectEl.value), \"a whole number\", [selectEl.value]);\n\n    return [\n        selectEl.value && new TWholeNumber().set(selectEl.value),\n        !selectEl.value && new TError().set(\"No option selected\")\n    ];\n}\n\nconst [x6, err6] = getOptionValue(document.querySelector('#pet-select'));\nconsole.log(x6, err6);\n\nif (err6) {\n    console.error('Error:', err6.get())\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './assert-tests.js';\nexport * from './types-tests.js';"],"names":[],"sourceRoot":""}