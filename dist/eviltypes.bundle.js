/*! For license information please see eviltypes.bundle.js.LICENSE.txt */
var eviltypes;(()=>{"use strict";var e={d:(t,r)=>{for(var s in r)e.o(r,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:r[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function r(e){let t;try{if(!e())throw Error(`Assert failure: ${e}`)}catch(e){t=e,t=Error("[ASSERT FAILURE]")}return t}function s(e,t){r((()=>e.constructor.name===t.name))}e.r(t),e.d(t,{TBase:()=>i,TBaseBoolean:()=>l,TBaseFloat:()=>c,TBaseInteger:()=>u,TBaseNull:()=>v,TBaseObject:()=>p,TBaseString:()=>_,TError:()=>n,assert:()=>o,assertType:()=>a});class i{_primitive;types={};_value=null;set(e){return this.assert(e),this._value=e,this}get(){return this._value}assert(e){s(e,this._primitive)}}class n extends i{_primitive=String;assert(e){return!!e}}function o(e){const t=r(e);if(t){const e=(new n).set(t);if(__DEV_DEBUG_TESTS__)return void console.error(e);throw e}}function a(e,t){const r=s(e,t);return r?(new TError).set(r):void 0}class l extends i{_primitive=Boolean}class c extends i{_primitive=Number}class u extends i{_primitive=Number;assert(e){o((()=>Number.isInteger(e))),o((()=>e>-1))}}class v extends i{_primitive=null}class p extends i{_primitive=Object}class _ extends i{_primitive=String}eviltypes=t})();
//# sourceMappingURL=eviltypes.bundle.js.map